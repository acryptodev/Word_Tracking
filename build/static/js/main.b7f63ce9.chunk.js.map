{"version":3,"sources":["assets/bg.jpg","components/utility/HeaderTitle.js","utils/googleTranslate.js","components/utility/InputWordsArea.js","store/action/index.js","store/action/actionTypes.js","components/utility/AnswerField.js","components/utility/AnswerArea.js","components/utility/Container.js","config/index.js","App.js","serviceWorker.js","store/reducer/index.js","store/index.js","index.js"],"names":["module","exports","Title","styled","p","HeaderTitle","className","googleTranslate","require","process","ContentWordsWrapper","div","TextAreaWrapper","ButtonWrapper","TextArea","textarea","Button","button","props","color","CopyButton","connect","state","data","dispatch","inputAnswer","a","obj","type","payload","useState","textval","setTextval","translate","setTranslate","answerWords","Set","value","onChange","e","transQuestion","target","err","translation","translatedText","onClick","forEach","item","indexOf","keywords","add","category","size","id","readOnly","copyText","document","getElementById","select","setSelectionRange","execCommand","notify","show","AnswerFieldWrapper","bgcolor","AnswerField","title","AnswerAreaWrapper","answer","arr","invalid","valid","Array","from","length","map","key","QuoteString","AdminButtonWrapper","AdminButton","FullContainer","bgimage","ContentContainer","MainWrapper","getInitData","axios","get","then","res","statusText","Promise","reject","catch","console","log","href","App","exact","path","component","Container","Boolean","window","location","hostname","match","initState","store","createStore","action","composeWithDevTools","applyMiddleware","thunk","logger","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7f63ce9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.755b0d23.jpg\";","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst HeaderTitle = () => {\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col-md-12 col-sm-12 col-xs-12\">\r\n\t\t\t\t<Title className=\"header_title\">Leen's CT Helper</Title>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t)\r\n}\r\nconst Title = styled.p`\r\n\tborder-radius: 3px;\r\n\topacity: .8;\r\n\tbox-shadow: 1px 3px 3px rgba(255,255,255,.8);\r\n\tbackground-color: white;\r\n\tcolor: black;\r\n\tfont-size: 2.4rem;\r\n\tfont-weight: 400;\r\n\tletter-spacing: .1rem;\r\n\ttext-align: center;\r\n\tfont-family: 'Amiko', sans-serif;\r\n`\r\nexport default HeaderTitle","const apiKey = process.env.REACT_APP_GOOGLE_TRANSLATE_API_KEY;\r\n\r\nexport const googleTranslate = require(\"google-translate\")(apiKey);","import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport {connect} from 'react-redux'\r\nimport {inputAnswer} from '../../store/action'\r\nimport { googleTranslate } from \"../../utils/googleTranslate\";\r\nimport Notifications, {notify} from 'react-notify-toast'\r\n\r\nconst InputWordsArea = ({data, inputAnswer}) => {\r\n\tconst [textval, setTextval] = useState(\"\")\r\n\tconst [translate, setTranslate] = useState(\"\")\r\n\tconst answerWords = new Set()\r\n\tconst handleClick = () => {\r\n\t\tdata.forEach(item=>{\r\n\t\t\tif (translate.indexOf(item.keywords) !== -1) {\r\n\t\t\t\tanswerWords.add(item.category.category)\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (answerWords.size === 0) {\r\n\t\t\tanswerWords.add(\"inconclusive\")\r\n\t\t}\r\n\t\t// console.log(\"answerWords\", answerWords, answerWords.size)\r\n\t\tinputAnswer(answerWords)\r\n\t}\r\n\tconst handleClearClick = () => {\r\n\t\tsetTextval(\"\")\r\n\t\tsetTranslate(\"\")\r\n\t}\r\n\tconst handleChange = (e) => {\r\n\t\tsetTextval(e.target.value)\r\n\t\tlet transQuestion\r\n\t\tgoogleTranslate.translate(e.target.value, \"en\", function(err, translation) {\r\n        transQuestion = translation.translatedText;\r\n        setTranslate(transQuestion);\r\n        // translating(transQuestion);\r\n        // console.log(\"transQuestion==>\", transQuestion)\r\n    \t})\r\n\t}\r\n\tconst handleCopyClick = e => {\r\n\t\tlet copyText = document.getElementById(\"translated_copy\");\r\n\t\tcopyText.select();\r\n\t\tcopyText.setSelectionRange(0, 99999)\r\n\t\tdocument.execCommand(\"copy\");\r\n\t\tif (copyText) {\r\n\t\t\tnotify.show(`Copied follow text${copyText}`)\r\n\t\t}\r\n\t\t// console.log(translate)\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t<Notifications />\r\n\t\t<ContentWordsWrapper className=\"card\">\r\n\t\t\t<TextAreaWrapper className=\"card-body\">\r\n\t\t\t\t<TextArea className=\"form-control\" value={textval} onChange={handleChange}/>\r\n\t\t\t</TextAreaWrapper>\r\n\t\t\t<ButtonWrapper className=\"card-footer\">\r\n\t\t\t\t<Button className=\"btn btn-primary\" color=\"#4287f5\" onClick={handleClick}>Go</Button>\r\n\t\t\t\t<Button className=\"btn btn-danger\" color=\"#f55d42\" onClick={handleClearClick}>Clear</Button>\r\n\t\t\t</ButtonWrapper>\r\n\t\t</ContentWordsWrapper>\r\n\t\t<ContentWordsWrapper className=\"card\">\r\n\t\t\t<TextAreaWrapper className=\"card-body\">\r\n\t\t\t\t<TextArea id=\"translated_copy\" className=\"form-control\" value={translate} readOnly/>\r\n\t\t\t</TextAreaWrapper>\r\n\t\t\t<ButtonWrapper className=\"card-footer\">\r\n\t\t\t\t<CopyButton className=\"btn btn-primary\" color=\"#4287f5\" onClick={handleCopyClick}>Copy</CopyButton>\r\n\t\t\t</ButtonWrapper>\r\n\t\t</ContentWordsWrapper>\r\n\t\t</div>\r\n\t\t)\r\n}\r\nconst ContentWordsWrapper = styled.div`\r\n\tmargin-top: 2rem;\r\n\topacity: .9;\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\theight: auto;\r\n\tbackground-color: none;\r\n\tborder: none;\r\n\t\r\n`\r\nconst TextAreaWrapper = styled.div`\r\n\tbackground-color: black;\r\n\tborder-top-right-radius: 7px;\r\n\tborder-top-left-radius: 7px;\r\n\tpadding: 30px 10px;\r\n\tbox-shadow: 1px 3px 3px rgba(0,0,0,.8);\r\n`\r\nconst ButtonWrapper = styled.div`\r\n\tbackground-color: white;\r\n\tpadding: .5rem;\r\n\tborder-bottom-right-radius: 7px;\r\n\tborder-bottom-left-radius: 7px;\r\n\tbox-shadow: 1px 3px 3px rgba(255,255,255,.8);\r\n`\r\nconst TextArea = styled.textarea`\r\n\twidth: 100%;\r\n\tmin-height: 120px;\r\n\tfont-size: 1rem;\r\n`\r\nconst Button = styled.button`\r\n\tmargin-left: 1rem;\r\n\t&:hover {\r\n\t\tbackground-color: transparent;\r\n\t\ttransition: .3s all;\r\n\t\tcolor: ${(props)=>props.color}\r\n\t}\r\n`\r\nconst CopyButton = styled.button`\r\n\tmargin-left: 1rem;\r\n\tfloat: right;\r\n\t&:hover {\r\n\t\tbackground-color: transparent;\r\n\t\ttransition: .3s all;\r\n\t\tcolor: ${(props)=>props.color}\r\n\t}\r\n`\r\nconst mapStateToProps = (state) => ({\r\n\tdata: state.data\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n\tinputAnswer: (a) => dispatch(inputAnswer(a)),\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputWordsArea)","import * as actionTypes from \"./actionTypes\"\r\nimport axios from \"axios\"\r\nimport {SERVER_PORT} from \"../../config\"\r\nexport const getInitData = () => {\r\n    return dispatch=> {\r\n    axios\r\n    .get(`${SERVER_PORT}/api/matchingwords/`)\r\n    .then( res => {\r\n        res.statusText === \"OK\"\r\n        ? dispatch({type: actionTypes.GET_DATA, payload:res.data})\r\n        : Promise.reject(`Can\"t communicate with REST API server (${res.statusText})`)\r\n    })\r\n    .catch(err => console.log(err));\r\n    }\r\n}\r\nexport const inputAnswer = (obj) => {\r\n\treturn dispatch=> {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.INPUT_ANSWER,\r\n\t\t\tpayload: obj\r\n\t\t})\r\n\t}\r\n}","export const GET_DATA = \"GET_DATA\"\r\nexport const INPUT_ANSWER = \"INPUT_ANSWER\"","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst AnswerField = ({title, bgcolor, color}) => {\r\n\treturn(\r\n\t\t<AnswerFieldWrapper color={color} bgcolor={bgcolor}>{title}</AnswerFieldWrapper>\r\n\t\t)\r\n}\r\nconst AnswerFieldWrapper = styled.div`\r\n\tbackground-color: ${(props) => props.bgcolor};\r\n\tcolor: ${(props) => props.color};\r\n\tfont-size: 1.5rem;\r\n\tpadding: .3rem;\r\n\tmargin: 1rem auto;\r\n\tborder-radius: 3px;\r\n\tletter-spacing: .1rem;\r\n\tfont-family: 'Amiko', sans-serif;\r\n`\r\nexport default AnswerField;","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport AnswerField from \"./AnswerField\"\r\nimport {connect} from 'react-redux'\r\n\r\nconst AnswerArea = ({answer}) => {\r\n\t\r\n\tlet arr\r\n\tif (answer && answer.size > 0) {\r\n\t\tarr = Array.from(answer)\r\n\t}\r\n\tlet invalid, valid\r\n\tif (arr && arr.length === 1 && arr[0] === \"inconclusive\") {\r\n\t\tinvalid = \"inconclusive\"\r\n\t} else if (arr && arr.length > 0) {\r\n\t\tvalid = arr\r\n\t}\r\n\treturn(\r\n\t\t<AnswerAreaWrapper>\r\n\t\t{\r\n\t\t\tvalid && valid.length > 0 && valid.map((item, key)=>\r\n\t\t\t\t<AnswerField key={key} title={item} color=\"#017809\" bgcolor=\"#b8e2f5\"></AnswerField>\r\n\t\t\t\t)\r\n\t\t}\r\n\t\t{\r\n\t\t\tinvalid && <AnswerField title={invalid} color=\"#b01f02\" bgcolor=\"#f5bfb8\"></AnswerField>\r\n\t\t}\r\n\t\t</AnswerAreaWrapper>\r\n\t\t)\r\n}\r\nconst AnswerAreaWrapper = styled.div`\r\n\twidth: 70%;\r\n\tbackground: black;\r\n\topacity: .9;\r\n\tmargin: 3rem auto 0 auto;\r\n\tpadding: 1rem;\r\n\tborder-radius: 5px;\r\n\tbox-shadow: 1px 3px 3px rgba(0,0,0,.9)\r\n`\r\nconst mapStateToProps = (state) => ({\r\n\tanswer: state.answer\r\n})\r\nexport default connect(mapStateToProps, null)(AnswerArea)\r\n// export default AnswerArea;","import React from 'react'\r\nimport HeaderTitle from './HeaderTitle'\r\nimport styled from 'styled-components'\r\nimport InputWordsArea from './InputWordsArea'\r\nimport AnswerArea from './AnswerArea'\r\nimport {connect} from 'react-redux'\r\nimport bgimage from '../../assets/bg.jpg'\r\nimport {getInitData} from '../../store/action'\r\n\r\nconst Container = ({getInitData}) => {\r\n\tgetInitData()\r\n\r\n\treturn(\r\n\t\t<FullContainer>\r\n\t\t\t<ContentContainer className=\"container\" >\r\n\t\t\t\t<AdminButtonWrapper>\r\n\t\t\t\t<a href=\"http://localhost:8000/admin/\">\r\n\t\t\t\t<AdminButton className=\"btn btn-primary\">To Admin</AdminButton>\r\n\t\t\t\t</a>\r\n\t\t\t\t</AdminButtonWrapper>\r\n\t\t\t\t<HeaderTitle />\r\n\t\t\t\t<MainWrapper className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-6 col-sm-12\">\r\n\t\t\t\t\t\t<InputWordsArea />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-6 col-sm-12\">\r\n\t\t\t\t\t\t<AnswerArea />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</MainWrapper>\r\n\t\t\t</ContentContainer>\r\n\t\t\t<QuoteString>Alles komt altijd goed</QuoteString>\r\n\t\t</FullContainer>\r\n\t\t)\r\n}\r\nconst QuoteString = styled.p`\r\n\tcolor: gray;\r\n\tposition: absolute;\r\n\tbottom: 0.5rem;\r\n\tright: 1rem;\r\n\tfont-family: 'Amiko', sans-serif;\r\n\tletter-spacing: 1px;\r\n`\r\nconst AdminButtonWrapper = styled.div`\r\n\ttext-align: right;\r\n\tmargin-bottom: 1rem;\r\n\r\n`\r\nconst AdminButton = styled.button`\r\n\tborder-radius: 5px;\r\n\toutline: none;\r\n\t&:hover {\r\n\t\tbackground-color: transparent;\r\n\t\ttransition: .3s all;\r\n\r\n\t}\r\n`\r\nconst FullContainer = styled.div`\r\n\tbackground-image: url(${bgimage});\r\n\tbackground-size: 100vw 100vh;\r\n\tbackground-repeat: no-repeat;\r\n\theight: 100vh;\r\n`\r\nconst ContentContainer = styled.div`\r\n\ttext-align: center;\r\n\tpadding: 1rem;\r\n`\r\nconst MainWrapper = styled.div`\r\n\r\n`\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tgetInitData: () => dispatch(getInitData()),\r\n})\r\nexport default connect(null, mapDispatchToProps)(Container);\r\n// export default Container;","const funcS = () => {\r\n\tswitch(process.env.NODE_ENV) {\r\n\t\tcase 'production':\r\n\t\t\treturn \"https://wordstrackingapp.herokuapp.com\"\r\n\t\tcase 'development':\r\n\t\t\treturn \"http://localhost:8000\"\r\n\t\tdefault:\r\n\t\t\treturn 'http://localhost:8000'\r\n\t}\r\n}\r\n// export SERVER_PORT;\r\nexport const SERVER_PORT = funcS();\r\n","import React from 'react';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Container from './components/utility/Container';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Container} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../action/actionTypes\";\r\n\r\nconst initState = {\r\n\tdata: {},\r\n\tanswer: {}\r\n}\r\n\r\nexport default function errorsReducer(state=initState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.GET_DATA:\r\n\t\t\treturn {\r\n\t\t\t\tdata: action.payload\r\n\t\t\t}\r\n\t\tcase actionTypes.INPUT_ANSWER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tanswer: action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import thunk from \"redux-thunk\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport reducers from \"./reducer\";\r\nimport logger from \"redux-logger\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\n// import from \"react\"\r\n\r\nexport const store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk, logger)));\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import $ from 'jquery';\n// import Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport store from \"./store\"\nimport {Provider} from \"react-redux\"\n\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}